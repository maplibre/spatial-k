name: CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

permissions:
    contents: read

jobs:
    build:
        strategy:
            matrix:
                include:
                    # Run full build and most tests on ubuntu
                    - runner: ubuntu-latest
                      task: build
                    # Run windows and macos native tests on those platforms
                    - runner: windows-latest
                      task: mingwX64Test
                    - runner: macos-latest
                      task: macosArm64Test

        runs-on: ${{ matrix.runner }}
        steps:
            - uses: actions/checkout@v5
            - uses: actions/setup-java@v5
              with:
                  distribution: temurin
                  java-version: 21
            - run: ./gradlew printSemver # TODO: remove this once we're confident in our config
            - run: ./gradlew ${{ matrix.task }}
            - if: ${{ matrix.task == 'build' }} # Kover only supports JVM
              name: Generate coverage summary
              run: |
                  echo '## Coverage' >> $GITHUB_STEP_SUMMARY
                  ./gradlew -q :koverLog >> $GITHUB_STEP_SUMMARY

    benchmark:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v5
            - uses: actions/setup-java@v5
              with:
                  distribution: temurin
                  java-version: 21
            - name: Run benchmark
              run: |
                  echo '## Benchmark' >> $GITHUB_STEP_SUMMARY
                  ./gradlew -q benchmark -PbenchmarkIterations=1 >> $GITHUB_STEP_SUMMARY

    docs:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v5
            - uses: actions/setup-java@v5
              with:
                  distribution: temurin
                  java-version: 21
            - run: pip3 install mkdocs-material
            - run: ./gradlew :dokkaGenerateHtml
            - run: mkdocs build -s

    check-format:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            checks: write
            issues: write
            pull-requests: write
        steps:
            - uses: actions/checkout@v5
            - uses: pre-commit/action@v3.0.1
            - if: ${{ github.event_name == 'pull_request' && failure() }}
              uses: reviewdog/action-suggester@v1
              with:
                  tool_name: format
                  fail_level: any
                  filter_mode: diff_context

    check-api:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            checks: write
            issues: write
            pull-requests: write
        steps:
            - uses: actions/checkout@v5
            - uses: actions/setup-java@v5
              with:
                  distribution: temurin
                  java-version: 21
            - run: ./gradlew updateLegacyAbi
            - if: ${{ github.event_name == 'pull_request' }}
              uses: reviewdog/action-suggester@v1
              with:
                  tool_name: api-dump
                  fail_level: any
                  filter_mode: added

    # stub to use as a "required" check on github
    all-good:
        needs: [build, check-format, docs, benchmark]
        runs-on: ubuntu-latest
        steps:
            - run: echo 'All checks passed!'
