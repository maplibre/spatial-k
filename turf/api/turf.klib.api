// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, wasmWasi, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <org.maplibre.spatialk:turf>
final class org.maplibre.spatialk.turf.misc/NearestPointOnLineResult { // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult|null[0]
    constructor <init>(org.maplibre.spatialk.geojson/Position, org.maplibre.spatialk.units/Length, org.maplibre.spatialk.units/Length, kotlin/Int) // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult.<init>|<init>(org.maplibre.spatialk.geojson.Position;org.maplibre.spatialk.units.Length;org.maplibre.spatialk.units.Length;kotlin.Int){}[0]

    final val distance // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult.distance|{}distance[0]
        final fun <get-distance>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult.distance.<get-distance>|<get-distance>(){}[0]
    final val index // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult.index|{}index[0]
        final fun <get-index>(): kotlin/Int // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult.index.<get-index>|<get-index>(){}[0]
    final val location // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult.location|{}location[0]
        final fun <get-location>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult.location.<get-location>|<get-location>(){}[0]
    final val point // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult.point|{}point[0]
        final fun <get-point>(): org.maplibre.spatialk.geojson/Position // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult.point.<get-point>|<get-point>(){}[0]

    final fun component1(): org.maplibre.spatialk.geojson/Position // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult.component1|component1(){}[0]
    final fun component2(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult.component2|component2(){}[0]
    final fun component3(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult.component3|component3(){}[0]
    final fun component4(): kotlin/Int // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult.component4|component4(){}[0]
    final fun copy(org.maplibre.spatialk.geojson/Position = ..., org.maplibre.spatialk.units/Length = ..., org.maplibre.spatialk.units/Length = ..., kotlin/Int = ...): org.maplibre.spatialk.turf.misc/NearestPointOnLineResult // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult.copy|copy(org.maplibre.spatialk.geojson.Position;org.maplibre.spatialk.units.Length;org.maplibre.spatialk.units.Length;kotlin.Int){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // org.maplibre.spatialk.turf.misc/NearestPointOnLineResult.toString|toString(){}[0]
}

final val org.maplibre.spatialk.turf.constants/EarthAverageRadius // org.maplibre.spatialk.turf.constants/EarthAverageRadius|{}EarthAverageRadius[0]
    final fun <get-EarthAverageRadius>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.turf.constants/EarthAverageRadius.<get-EarthAverageRadius>|<get-EarthAverageRadius>(){}[0]
final val org.maplibre.spatialk.turf.constants/EarthEquatorRadius // org.maplibre.spatialk.turf.constants/EarthEquatorRadius|{}EarthEquatorRadius[0]
    final fun <get-EarthEquatorRadius>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.turf.constants/EarthEquatorRadius.<get-EarthEquatorRadius>|<get-EarthEquatorRadius>(){}[0]

final fun (org.maplibre.spatialk.geojson/BoundingBox).org.maplibre.spatialk.turf.measurement/toPolygon(): org.maplibre.spatialk.geojson/Polygon // org.maplibre.spatialk.turf.measurement/toPolygon|toPolygon@org.maplibre.spatialk.geojson.BoundingBox(){}[0]
final fun (org.maplibre.spatialk.geojson/Feature<*>).org.maplibre.spatialk.turf.meta/coordAll(): kotlin.collections/List<org.maplibre.spatialk.geojson/Position>? // org.maplibre.spatialk.turf.meta/coordAll|coordAll@org.maplibre.spatialk.geojson.Feature<*>(){}[0]
final fun (org.maplibre.spatialk.geojson/FeatureCollection).org.maplibre.spatialk.turf.meta/coordAll(): kotlin.collections/List<org.maplibre.spatialk.geojson/Position> // org.maplibre.spatialk.turf.meta/coordAll|coordAll@org.maplibre.spatialk.geojson.FeatureCollection(){}[0]
final fun (org.maplibre.spatialk.geojson/Geometry).org.maplibre.spatialk.turf.meta/coordAll(): kotlin.collections/List<org.maplibre.spatialk.geojson/Position> // org.maplibre.spatialk.turf.meta/coordAll|coordAll@org.maplibre.spatialk.geojson.Geometry(){}[0]
final fun (org.maplibre.spatialk.geojson/GeometryCollection).org.maplibre.spatialk.turf.meta/coordAll(): kotlin.collections/List<org.maplibre.spatialk.geojson/Position> // org.maplibre.spatialk.turf.meta/coordAll|coordAll@org.maplibre.spatialk.geojson.GeometryCollection(){}[0]
final fun (org.maplibre.spatialk.geojson/LineString).org.maplibre.spatialk.turf.meta/coordAll(): kotlin.collections/List<org.maplibre.spatialk.geojson/Position> // org.maplibre.spatialk.turf.meta/coordAll|coordAll@org.maplibre.spatialk.geojson.LineString(){}[0]
final fun (org.maplibre.spatialk.geojson/MultiLineString).org.maplibre.spatialk.turf.meta/coordAll(): kotlin.collections/List<org.maplibre.spatialk.geojson/Position> // org.maplibre.spatialk.turf.meta/coordAll|coordAll@org.maplibre.spatialk.geojson.MultiLineString(){}[0]
final fun (org.maplibre.spatialk.geojson/MultiPoint).org.maplibre.spatialk.turf.meta/coordAll(): kotlin.collections/List<org.maplibre.spatialk.geojson/Position> // org.maplibre.spatialk.turf.meta/coordAll|coordAll@org.maplibre.spatialk.geojson.MultiPoint(){}[0]
final fun (org.maplibre.spatialk.geojson/MultiPolygon).org.maplibre.spatialk.turf.meta/coordAll(): kotlin.collections/List<org.maplibre.spatialk.geojson/Position> // org.maplibre.spatialk.turf.meta/coordAll|coordAll@org.maplibre.spatialk.geojson.MultiPolygon(){}[0]
final fun (org.maplibre.spatialk.geojson/Point).org.maplibre.spatialk.turf.meta/coordAll(): kotlin.collections/List<org.maplibre.spatialk.geojson/Position> // org.maplibre.spatialk.turf.meta/coordAll|coordAll@org.maplibre.spatialk.geojson.Point(){}[0]
final fun (org.maplibre.spatialk.geojson/Polygon).org.maplibre.spatialk.turf.booleans/contains(org.maplibre.spatialk.geojson/Point): kotlin/Boolean // org.maplibre.spatialk.turf.booleans/contains|contains@org.maplibre.spatialk.geojson.Polygon(org.maplibre.spatialk.geojson.Point){}[0]
final fun (org.maplibre.spatialk.geojson/Polygon).org.maplibre.spatialk.turf.meta/coordAll(): kotlin.collections/List<org.maplibre.spatialk.geojson/Position> // org.maplibre.spatialk.turf.meta/coordAll|coordAll@org.maplibre.spatialk.geojson.Polygon(){}[0]
final fun org.maplibre.spatialk.turf.booleans/pointInPolygon(org.maplibre.spatialk.geojson/Point, org.maplibre.spatialk.geojson/MultiPolygon, kotlin/Boolean = ...): kotlin/Boolean // org.maplibre.spatialk.turf.booleans/pointInPolygon|pointInPolygon(org.maplibre.spatialk.geojson.Point;org.maplibre.spatialk.geojson.MultiPolygon;kotlin.Boolean){}[0]
final fun org.maplibre.spatialk.turf.booleans/pointInPolygon(org.maplibre.spatialk.geojson/Point, org.maplibre.spatialk.geojson/Polygon, kotlin/Boolean = ...): kotlin/Boolean // org.maplibre.spatialk.turf.booleans/pointInPolygon|pointInPolygon(org.maplibre.spatialk.geojson.Point;org.maplibre.spatialk.geojson.Polygon;kotlin.Boolean){}[0]
final fun org.maplibre.spatialk.turf.coordinatemutation/round(kotlin/Double, kotlin/Int = ...): kotlin/Double // org.maplibre.spatialk.turf.coordinatemutation/round|round(kotlin.Double;kotlin.Int){}[0]
final fun org.maplibre.spatialk.turf.grids/squareGrid(org.maplibre.spatialk.geojson/BoundingBox, kotlin/Double, kotlin/Double = ..., org.maplibre.spatialk.units/LengthUnit = ...): org.maplibre.spatialk.geojson/FeatureCollection // org.maplibre.spatialk.turf.grids/squareGrid|squareGrid(org.maplibre.spatialk.geojson.BoundingBox;kotlin.Double;kotlin.Double;org.maplibre.spatialk.units.LengthUnit){}[0]
final fun org.maplibre.spatialk.turf.grids/squareGrid(org.maplibre.spatialk.geojson/BoundingBox, org.maplibre.spatialk.units/Length, org.maplibre.spatialk.units/Length = ...): org.maplibre.spatialk.geojson/FeatureCollection // org.maplibre.spatialk.turf.grids/squareGrid|squareGrid(org.maplibre.spatialk.geojson.BoundingBox;org.maplibre.spatialk.units.Length;org.maplibre.spatialk.units.Length){}[0]
final fun org.maplibre.spatialk.turf.measurement/along(org.maplibre.spatialk.geojson/LineString, kotlin/Double, org.maplibre.spatialk.units/LengthUnit = ...): org.maplibre.spatialk.geojson/Position // org.maplibre.spatialk.turf.measurement/along|along(org.maplibre.spatialk.geojson.LineString;kotlin.Double;org.maplibre.spatialk.units.LengthUnit){}[0]
final fun org.maplibre.spatialk.turf.measurement/along(org.maplibre.spatialk.geojson/LineString, org.maplibre.spatialk.units/Length): org.maplibre.spatialk.geojson/Position // org.maplibre.spatialk.turf.measurement/along|along(org.maplibre.spatialk.geojson.LineString;org.maplibre.spatialk.units.Length){}[0]
final fun org.maplibre.spatialk.turf.measurement/area(org.maplibre.spatialk.geojson/Geometry): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.turf.measurement/area|area(org.maplibre.spatialk.geojson.Geometry){}[0]
final fun org.maplibre.spatialk.turf.measurement/area(org.maplibre.spatialk.geojson/Geometry, org.maplibre.spatialk.units/AreaUnit = ...): kotlin/Double // org.maplibre.spatialk.turf.measurement/area|area(org.maplibre.spatialk.geojson.Geometry;org.maplibre.spatialk.units.AreaUnit){}[0]
final fun org.maplibre.spatialk.turf.measurement/bbox(org.maplibre.spatialk.geojson/Feature<*>): org.maplibre.spatialk.geojson/BoundingBox // org.maplibre.spatialk.turf.measurement/bbox|bbox(org.maplibre.spatialk.geojson.Feature<*>){}[0]
final fun org.maplibre.spatialk.turf.measurement/bbox(org.maplibre.spatialk.geojson/FeatureCollection): org.maplibre.spatialk.geojson/BoundingBox // org.maplibre.spatialk.turf.measurement/bbox|bbox(org.maplibre.spatialk.geojson.FeatureCollection){}[0]
final fun org.maplibre.spatialk.turf.measurement/bbox(org.maplibre.spatialk.geojson/Geometry): org.maplibre.spatialk.geojson/BoundingBox // org.maplibre.spatialk.turf.measurement/bbox|bbox(org.maplibre.spatialk.geojson.Geometry){}[0]
final fun org.maplibre.spatialk.turf.measurement/bbox(org.maplibre.spatialk.geojson/LineString): org.maplibre.spatialk.geojson/BoundingBox // org.maplibre.spatialk.turf.measurement/bbox|bbox(org.maplibre.spatialk.geojson.LineString){}[0]
final fun org.maplibre.spatialk.turf.measurement/bbox(org.maplibre.spatialk.geojson/MultiLineString): org.maplibre.spatialk.geojson/BoundingBox // org.maplibre.spatialk.turf.measurement/bbox|bbox(org.maplibre.spatialk.geojson.MultiLineString){}[0]
final fun org.maplibre.spatialk.turf.measurement/bbox(org.maplibre.spatialk.geojson/MultiPoint): org.maplibre.spatialk.geojson/BoundingBox // org.maplibre.spatialk.turf.measurement/bbox|bbox(org.maplibre.spatialk.geojson.MultiPoint){}[0]
final fun org.maplibre.spatialk.turf.measurement/bbox(org.maplibre.spatialk.geojson/MultiPolygon): org.maplibre.spatialk.geojson/BoundingBox // org.maplibre.spatialk.turf.measurement/bbox|bbox(org.maplibre.spatialk.geojson.MultiPolygon){}[0]
final fun org.maplibre.spatialk.turf.measurement/bbox(org.maplibre.spatialk.geojson/Point): org.maplibre.spatialk.geojson/BoundingBox // org.maplibre.spatialk.turf.measurement/bbox|bbox(org.maplibre.spatialk.geojson.Point){}[0]
final fun org.maplibre.spatialk.turf.measurement/bbox(org.maplibre.spatialk.geojson/Polygon): org.maplibre.spatialk.geojson/BoundingBox // org.maplibre.spatialk.turf.measurement/bbox|bbox(org.maplibre.spatialk.geojson.Polygon){}[0]
final fun org.maplibre.spatialk.turf.measurement/bboxPolygon(org.maplibre.spatialk.geojson/BoundingBox): org.maplibre.spatialk.geojson/Polygon // org.maplibre.spatialk.turf.measurement/bboxPolygon|bboxPolygon(org.maplibre.spatialk.geojson.BoundingBox){}[0]
final fun org.maplibre.spatialk.turf.measurement/bearing(org.maplibre.spatialk.geojson/Position, org.maplibre.spatialk.geojson/Position, kotlin/Boolean = ...): kotlin/Double // org.maplibre.spatialk.turf.measurement/bearing|bearing(org.maplibre.spatialk.geojson.Position;org.maplibre.spatialk.geojson.Position;kotlin.Boolean){}[0]
final fun org.maplibre.spatialk.turf.measurement/center(org.maplibre.spatialk.geojson/Feature<*>): org.maplibre.spatialk.geojson/Point // org.maplibre.spatialk.turf.measurement/center|center(org.maplibre.spatialk.geojson.Feature<*>){}[0]
final fun org.maplibre.spatialk.turf.measurement/center(org.maplibre.spatialk.geojson/Geometry): org.maplibre.spatialk.geojson/Point // org.maplibre.spatialk.turf.measurement/center|center(org.maplibre.spatialk.geojson.Geometry){}[0]
final fun org.maplibre.spatialk.turf.measurement/destination(org.maplibre.spatialk.geojson/Position, kotlin/Double, org.maplibre.spatialk.units/LengthUnit = ..., kotlin/Int): org.maplibre.spatialk.geojson/Position // org.maplibre.spatialk.turf.measurement/destination|destination(org.maplibre.spatialk.geojson.Position;kotlin.Double;org.maplibre.spatialk.units.LengthUnit;kotlin.Int){}[0]
final fun org.maplibre.spatialk.turf.measurement/destination(org.maplibre.spatialk.geojson/Position, org.maplibre.spatialk.units/Length, kotlin/Double): org.maplibre.spatialk.geojson/Position // org.maplibre.spatialk.turf.measurement/destination|destination(org.maplibre.spatialk.geojson.Position;org.maplibre.spatialk.units.Length;kotlin.Double){}[0]
final fun org.maplibre.spatialk.turf.measurement/distance(org.maplibre.spatialk.geojson/Position, org.maplibre.spatialk.geojson/Position): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.turf.measurement/distance|distance(org.maplibre.spatialk.geojson.Position;org.maplibre.spatialk.geojson.Position){}[0]
final fun org.maplibre.spatialk.turf.measurement/distance(org.maplibre.spatialk.geojson/Position, org.maplibre.spatialk.geojson/Position, org.maplibre.spatialk.units/LengthUnit = ...): kotlin/Double // org.maplibre.spatialk.turf.measurement/distance|distance(org.maplibre.spatialk.geojson.Position;org.maplibre.spatialk.geojson.Position;org.maplibre.spatialk.units.LengthUnit){}[0]
final fun org.maplibre.spatialk.turf.measurement/envelope(org.maplibre.spatialk.geojson/GeoJsonObject): org.maplibre.spatialk.geojson/Feature<org.maplibre.spatialk.geojson/Polygon> // org.maplibre.spatialk.turf.measurement/envelope|envelope(org.maplibre.spatialk.geojson.GeoJsonObject){}[0]
final fun org.maplibre.spatialk.turf.measurement/greatCircle(org.maplibre.spatialk.geojson/Position, org.maplibre.spatialk.geojson/Position, kotlin/Int = ..., kotlin/Double = ...): org.maplibre.spatialk.geojson/Geometry // org.maplibre.spatialk.turf.measurement/greatCircle|greatCircle(org.maplibre.spatialk.geojson.Position;org.maplibre.spatialk.geojson.Position;kotlin.Int;kotlin.Double){}[0]
final fun org.maplibre.spatialk.turf.measurement/length(org.maplibre.spatialk.geojson/Geometry): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.turf.measurement/length|length(org.maplibre.spatialk.geojson.Geometry){}[0]
final fun org.maplibre.spatialk.turf.measurement/length(org.maplibre.spatialk.geojson/Geometry, org.maplibre.spatialk.units/LengthUnit = ...): kotlin/Double // org.maplibre.spatialk.turf.measurement/length|length(org.maplibre.spatialk.geojson.Geometry;org.maplibre.spatialk.units.LengthUnit){}[0]
final fun org.maplibre.spatialk.turf.measurement/midpoint(org.maplibre.spatialk.geojson/Position, org.maplibre.spatialk.geojson/Position): org.maplibre.spatialk.geojson/Position // org.maplibre.spatialk.turf.measurement/midpoint|midpoint(org.maplibre.spatialk.geojson.Position;org.maplibre.spatialk.geojson.Position){}[0]
final fun org.maplibre.spatialk.turf.measurement/pointToLineDistance(org.maplibre.spatialk.geojson/Position, org.maplibre.spatialk.geojson/LineString): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.turf.measurement/pointToLineDistance|pointToLineDistance(org.maplibre.spatialk.geojson.Position;org.maplibre.spatialk.geojson.LineString){}[0]
final fun org.maplibre.spatialk.turf.measurement/pointToLineDistance(org.maplibre.spatialk.geojson/Position, org.maplibre.spatialk.geojson/LineString, org.maplibre.spatialk.units/LengthUnit = ...): kotlin/Double // org.maplibre.spatialk.turf.measurement/pointToLineDistance|pointToLineDistance(org.maplibre.spatialk.geojson.Position;org.maplibre.spatialk.geojson.LineString;org.maplibre.spatialk.units.LengthUnit){}[0]
final fun org.maplibre.spatialk.turf.measurement/rhumbDistance(org.maplibre.spatialk.geojson/Position, org.maplibre.spatialk.geojson/Position): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.turf.measurement/rhumbDistance|rhumbDistance(org.maplibre.spatialk.geojson.Position;org.maplibre.spatialk.geojson.Position){}[0]
final fun org.maplibre.spatialk.turf.measurement/rhumbDistance(org.maplibre.spatialk.geojson/Position, org.maplibre.spatialk.geojson/Position, org.maplibre.spatialk.units/LengthUnit = ...): kotlin/Double // org.maplibre.spatialk.turf.measurement/rhumbDistance|rhumbDistance(org.maplibre.spatialk.geojson.Position;org.maplibre.spatialk.geojson.Position;org.maplibre.spatialk.units.LengthUnit){}[0]
final fun org.maplibre.spatialk.turf.measurement/square(org.maplibre.spatialk.geojson/BoundingBox): org.maplibre.spatialk.geojson/BoundingBox // org.maplibre.spatialk.turf.measurement/square|square(org.maplibre.spatialk.geojson.BoundingBox){}[0]
final fun org.maplibre.spatialk.turf.misc/lineIntersect(org.maplibre.spatialk.geojson/LineString, org.maplibre.spatialk.geojson/LineString): kotlin.collections/List<org.maplibre.spatialk.geojson/Position> // org.maplibre.spatialk.turf.misc/lineIntersect|lineIntersect(org.maplibre.spatialk.geojson.LineString;org.maplibre.spatialk.geojson.LineString){}[0]
final fun org.maplibre.spatialk.turf.misc/lineSlice(org.maplibre.spatialk.geojson/Position, org.maplibre.spatialk.geojson/Position, org.maplibre.spatialk.geojson/LineString): org.maplibre.spatialk.geojson/LineString // org.maplibre.spatialk.turf.misc/lineSlice|lineSlice(org.maplibre.spatialk.geojson.Position;org.maplibre.spatialk.geojson.Position;org.maplibre.spatialk.geojson.LineString){}[0]
final fun org.maplibre.spatialk.turf.misc/nearestPointOnLine(org.maplibre.spatialk.geojson/LineString, org.maplibre.spatialk.geojson/Position): org.maplibre.spatialk.turf.misc/NearestPointOnLineResult // org.maplibre.spatialk.turf.misc/nearestPointOnLine|nearestPointOnLine(org.maplibre.spatialk.geojson.LineString;org.maplibre.spatialk.geojson.Position){}[0]
final fun org.maplibre.spatialk.turf.misc/nearestPointOnLine(org.maplibre.spatialk.geojson/MultiLineString, org.maplibre.spatialk.geojson/Position): org.maplibre.spatialk.turf.misc/NearestPointOnLineResult // org.maplibre.spatialk.turf.misc/nearestPointOnLine|nearestPointOnLine(org.maplibre.spatialk.geojson.MultiLineString;org.maplibre.spatialk.geojson.Position){}[0]
final fun org.maplibre.spatialk.turf.transformation/bezierSpline(kotlin.collections/List<org.maplibre.spatialk.geojson/Position>, kotlin/Int = ..., kotlin/Double = ...): kotlin.collections/List<org.maplibre.spatialk.geojson/Position> // org.maplibre.spatialk.turf.transformation/bezierSpline|bezierSpline(kotlin.collections.List<org.maplibre.spatialk.geojson.Position>;kotlin.Int;kotlin.Double){}[0]
final fun org.maplibre.spatialk.turf.transformation/bezierSpline(org.maplibre.spatialk.geojson/LineString, kotlin/Int = ..., kotlin/Double = ...): org.maplibre.spatialk.geojson/LineString // org.maplibre.spatialk.turf.transformation/bezierSpline|bezierSpline(org.maplibre.spatialk.geojson.LineString;kotlin.Int;kotlin.Double){}[0]
final fun org.maplibre.spatialk.turf.transformation/circle(org.maplibre.spatialk.geojson/Point, kotlin/Double, org.maplibre.spatialk.units/LengthUnit = ..., kotlin/Int = ...): org.maplibre.spatialk.geojson/Polygon // org.maplibre.spatialk.turf.transformation/circle|circle(org.maplibre.spatialk.geojson.Point;kotlin.Double;org.maplibre.spatialk.units.LengthUnit;kotlin.Int){}[0]
final fun org.maplibre.spatialk.turf.transformation/circle(org.maplibre.spatialk.geojson/Point, org.maplibre.spatialk.units/Length, kotlin/Int = ...): org.maplibre.spatialk.geojson/Polygon // org.maplibre.spatialk.turf.transformation/circle|circle(org.maplibre.spatialk.geojson.Point;org.maplibre.spatialk.units.Length;kotlin.Int){}[0]
final fun org.maplibre.spatialk.turf.transformation/simplify(org.maplibre.spatialk.geojson/LineString, kotlin/Double? = ..., kotlin/Boolean = ...): org.maplibre.spatialk.geojson/LineString // org.maplibre.spatialk.turf.transformation/simplify|simplify(org.maplibre.spatialk.geojson.LineString;kotlin.Double?;kotlin.Boolean){}[0]
final fun org.maplibre.spatialk.turf.unitconversion/azimuthToBearing(kotlin/Double): kotlin/Double // org.maplibre.spatialk.turf.unitconversion/azimuthToBearing|azimuthToBearing(kotlin.Double){}[0]
final fun org.maplibre.spatialk.turf.unitconversion/bearingToAzimuth(kotlin/Double): kotlin/Double // org.maplibre.spatialk.turf.unitconversion/bearingToAzimuth|bearingToAzimuth(kotlin.Double){}[0]
final fun org.maplibre.spatialk.turf.unitconversion/degreesToRadians(kotlin/Double): kotlin/Double // org.maplibre.spatialk.turf.unitconversion/degreesToRadians|degreesToRadians(kotlin.Double){}[0]
final fun org.maplibre.spatialk.turf.unitconversion/radiansToDegrees(kotlin/Double): kotlin/Double // org.maplibre.spatialk.turf.unitconversion/radiansToDegrees|radiansToDegrees(kotlin.Double){}[0]
