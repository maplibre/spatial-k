// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, wasmWasi, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <org.maplibre.spatialk:units>
sealed interface org.maplibre.spatialk.units/UnitOfMeasure { // org.maplibre.spatialk.units/UnitOfMeasure|null[0]
    abstract val symbol // org.maplibre.spatialk.units/UnitOfMeasure.symbol|{}symbol[0]
        abstract fun <get-symbol>(): kotlin/String // org.maplibre.spatialk.units/UnitOfMeasure.symbol.<get-symbol>|<get-symbol>(){}[0]

    open fun format(kotlin/Double, kotlin/Int = ...): kotlin/String // org.maplibre.spatialk.units/UnitOfMeasure.format|format(kotlin.Double;kotlin.Int){}[0]
}

final value class org.maplibre.spatialk.units/Area : kotlin/Comparable<org.maplibre.spatialk.units/Area> { // org.maplibre.spatialk.units/Area|null[0]
    final val absoluteValue // org.maplibre.spatialk.units/Area.absoluteValue|{}absoluteValue[0]
        final fun <get-absoluteValue>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units/Area.absoluteValue.<get-absoluteValue>|<get-absoluteValue>(){}[0]
    final val isFinite // org.maplibre.spatialk.units/Area.isFinite|{}isFinite[0]
        final fun <get-isFinite>(): kotlin/Boolean // org.maplibre.spatialk.units/Area.isFinite.<get-isFinite>|<get-isFinite>(){}[0]
    final val isInfinite // org.maplibre.spatialk.units/Area.isInfinite|{}isInfinite[0]
        final fun <get-isInfinite>(): kotlin/Boolean // org.maplibre.spatialk.units/Area.isInfinite.<get-isInfinite>|<get-isInfinite>(){}[0]
    final val isNegative // org.maplibre.spatialk.units/Area.isNegative|{}isNegative[0]
        final fun <get-isNegative>(): kotlin/Boolean // org.maplibre.spatialk.units/Area.isNegative.<get-isNegative>|<get-isNegative>(){}[0]
    final val isPositive // org.maplibre.spatialk.units/Area.isPositive|{}isPositive[0]
        final fun <get-isPositive>(): kotlin/Boolean // org.maplibre.spatialk.units/Area.isPositive.<get-isPositive>|<get-isPositive>(){}[0]
    final val isZero // org.maplibre.spatialk.units/Area.isZero|{}isZero[0]
        final fun <get-isZero>(): kotlin/Boolean // org.maplibre.spatialk.units/Area.isZero.<get-isZero>|<get-isZero>(){}[0]

    final fun compareTo(org.maplibre.spatialk.units/Area): kotlin/Int // org.maplibre.spatialk.units/Area.compareTo|compareTo(org.maplibre.spatialk.units.Area){}[0]
    final fun div(kotlin/Double): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units/Area.div|div(kotlin.Double){}[0]
    final fun div(org.maplibre.spatialk.units/Area): kotlin/Double // org.maplibre.spatialk.units/Area.div|div(org.maplibre.spatialk.units.Area){}[0]
    final fun div(org.maplibre.spatialk.units/Length): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units/Area.div|div(org.maplibre.spatialk.units.Length){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // org.maplibre.spatialk.units/Area.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // org.maplibre.spatialk.units/Area.hashCode|hashCode(){}[0]
    final fun minus(org.maplibre.spatialk.units/Area): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units/Area.minus|minus(org.maplibre.spatialk.units.Area){}[0]
    final fun plus(org.maplibre.spatialk.units/Area): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units/Area.plus|plus(org.maplibre.spatialk.units.Area){}[0]
    final fun roundToInt(org.maplibre.spatialk.units/AreaUnit): kotlin/Int // org.maplibre.spatialk.units/Area.roundToInt|roundToInt(org.maplibre.spatialk.units.AreaUnit){}[0]
    final fun roundToLong(org.maplibre.spatialk.units/AreaUnit): kotlin/Long // org.maplibre.spatialk.units/Area.roundToLong|roundToLong(org.maplibre.spatialk.units.AreaUnit){}[0]
    final fun times(kotlin/Double): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units/Area.times|times(kotlin.Double){}[0]
    final fun toDouble(org.maplibre.spatialk.units/AreaUnit): kotlin/Double // org.maplibre.spatialk.units/Area.toDouble|toDouble(org.maplibre.spatialk.units.AreaUnit){}[0]
    final fun toFloat(org.maplibre.spatialk.units/AreaUnit): kotlin/Float // org.maplibre.spatialk.units/Area.toFloat|toFloat(org.maplibre.spatialk.units.AreaUnit){}[0]
    final fun toString(): kotlin/String // org.maplibre.spatialk.units/Area.toString|toString(){}[0]
    final fun toString(org.maplibre.spatialk.units/AreaUnit, kotlin/Int = ...): kotlin/String // org.maplibre.spatialk.units/Area.toString|toString(org.maplibre.spatialk.units.AreaUnit;kotlin.Int){}[0]
    final fun unaryMinus(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units/Area.unaryMinus|unaryMinus(){}[0]
    final fun unaryPlus(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units/Area.unaryPlus|unaryPlus(){}[0]

    final object Companion { // org.maplibre.spatialk.units/Area.Companion|null[0]
        final val MaxValue // org.maplibre.spatialk.units/Area.Companion.MaxValue|{}MaxValue[0]
            final fun <get-MaxValue>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units/Area.Companion.MaxValue.<get-MaxValue>|<get-MaxValue>(){}[0]
        final val MinValue // org.maplibre.spatialk.units/Area.Companion.MinValue|{}MinValue[0]
            final fun <get-MinValue>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units/Area.Companion.MinValue.<get-MinValue>|<get-MinValue>(){}[0]
        final val NegativeInfinity // org.maplibre.spatialk.units/Area.Companion.NegativeInfinity|{}NegativeInfinity[0]
            final fun <get-NegativeInfinity>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units/Area.Companion.NegativeInfinity.<get-NegativeInfinity>|<get-NegativeInfinity>(){}[0]
        final val PositiveInfinity // org.maplibre.spatialk.units/Area.Companion.PositiveInfinity|{}PositiveInfinity[0]
            final fun <get-PositiveInfinity>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units/Area.Companion.PositiveInfinity.<get-PositiveInfinity>|<get-PositiveInfinity>(){}[0]
        final val Zero // org.maplibre.spatialk.units/Area.Companion.Zero|{}Zero[0]
            final fun <get-Zero>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units/Area.Companion.Zero.<get-Zero>|<get-Zero>(){}[0]
    }
}

final value class org.maplibre.spatialk.units/Length : kotlin/Comparable<org.maplibre.spatialk.units/Length> { // org.maplibre.spatialk.units/Length|null[0]
    final val absoluteValue // org.maplibre.spatialk.units/Length.absoluteValue|{}absoluteValue[0]
        final fun <get-absoluteValue>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units/Length.absoluteValue.<get-absoluteValue>|<get-absoluteValue>(){}[0]
    final val isFinite // org.maplibre.spatialk.units/Length.isFinite|{}isFinite[0]
        final fun <get-isFinite>(): kotlin/Boolean // org.maplibre.spatialk.units/Length.isFinite.<get-isFinite>|<get-isFinite>(){}[0]
    final val isInfinite // org.maplibre.spatialk.units/Length.isInfinite|{}isInfinite[0]
        final fun <get-isInfinite>(): kotlin/Boolean // org.maplibre.spatialk.units/Length.isInfinite.<get-isInfinite>|<get-isInfinite>(){}[0]
    final val isNegative // org.maplibre.spatialk.units/Length.isNegative|{}isNegative[0]
        final fun <get-isNegative>(): kotlin/Boolean // org.maplibre.spatialk.units/Length.isNegative.<get-isNegative>|<get-isNegative>(){}[0]
    final val isPositive // org.maplibre.spatialk.units/Length.isPositive|{}isPositive[0]
        final fun <get-isPositive>(): kotlin/Boolean // org.maplibre.spatialk.units/Length.isPositive.<get-isPositive>|<get-isPositive>(){}[0]
    final val isZero // org.maplibre.spatialk.units/Length.isZero|{}isZero[0]
        final fun <get-isZero>(): kotlin/Boolean // org.maplibre.spatialk.units/Length.isZero.<get-isZero>|<get-isZero>(){}[0]

    final fun compareTo(org.maplibre.spatialk.units/Length): kotlin/Int // org.maplibre.spatialk.units/Length.compareTo|compareTo(org.maplibre.spatialk.units.Length){}[0]
    final fun div(kotlin/Double): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units/Length.div|div(kotlin.Double){}[0]
    final fun div(org.maplibre.spatialk.units/Length): kotlin/Double // org.maplibre.spatialk.units/Length.div|div(org.maplibre.spatialk.units.Length){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // org.maplibre.spatialk.units/Length.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // org.maplibre.spatialk.units/Length.hashCode|hashCode(){}[0]
    final fun minus(org.maplibre.spatialk.units/Length): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units/Length.minus|minus(org.maplibre.spatialk.units.Length){}[0]
    final fun plus(org.maplibre.spatialk.units/Length): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units/Length.plus|plus(org.maplibre.spatialk.units.Length){}[0]
    final fun roundToInt(org.maplibre.spatialk.units/LengthUnit): kotlin/Int // org.maplibre.spatialk.units/Length.roundToInt|roundToInt(org.maplibre.spatialk.units.LengthUnit){}[0]
    final fun roundToLong(org.maplibre.spatialk.units/LengthUnit): kotlin/Long // org.maplibre.spatialk.units/Length.roundToLong|roundToLong(org.maplibre.spatialk.units.LengthUnit){}[0]
    final fun times(kotlin/Double): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units/Length.times|times(kotlin.Double){}[0]
    final fun times(org.maplibre.spatialk.units/Length): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units/Length.times|times(org.maplibre.spatialk.units.Length){}[0]
    final fun toDouble(org.maplibre.spatialk.units/LengthUnit): kotlin/Double // org.maplibre.spatialk.units/Length.toDouble|toDouble(org.maplibre.spatialk.units.LengthUnit){}[0]
    final fun toFloat(org.maplibre.spatialk.units/LengthUnit): kotlin/Float // org.maplibre.spatialk.units/Length.toFloat|toFloat(org.maplibre.spatialk.units.LengthUnit){}[0]
    final fun toString(): kotlin/String // org.maplibre.spatialk.units/Length.toString|toString(){}[0]
    final fun toString(org.maplibre.spatialk.units/LengthUnit, kotlin/Int = ...): kotlin/String // org.maplibre.spatialk.units/Length.toString|toString(org.maplibre.spatialk.units.LengthUnit;kotlin.Int){}[0]

    final object Companion { // org.maplibre.spatialk.units/Length.Companion|null[0]
        final val MaxValue // org.maplibre.spatialk.units/Length.Companion.MaxValue|{}MaxValue[0]
            final fun <get-MaxValue>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units/Length.Companion.MaxValue.<get-MaxValue>|<get-MaxValue>(){}[0]
        final val MinValue // org.maplibre.spatialk.units/Length.Companion.MinValue|{}MinValue[0]
            final fun <get-MinValue>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units/Length.Companion.MinValue.<get-MinValue>|<get-MinValue>(){}[0]
        final val NegativeInfinity // org.maplibre.spatialk.units/Length.Companion.NegativeInfinity|{}NegativeInfinity[0]
            final fun <get-NegativeInfinity>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units/Length.Companion.NegativeInfinity.<get-NegativeInfinity>|<get-NegativeInfinity>(){}[0]
        final val PositiveInfinity // org.maplibre.spatialk.units/Length.Companion.PositiveInfinity|{}PositiveInfinity[0]
            final fun <get-PositiveInfinity>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units/Length.Companion.PositiveInfinity.<get-PositiveInfinity>|<get-PositiveInfinity>(){}[0]
        final val Zero // org.maplibre.spatialk.units/Length.Companion.Zero|{}Zero[0]
            final fun <get-Zero>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units/Length.Companion.Zero.<get-Zero>|<get-Zero>(){}[0]
    }
}

open class org.maplibre.spatialk.units/AreaUnit : kotlin/Comparable<org.maplibre.spatialk.units/AreaUnit>, org.maplibre.spatialk.units/UnitOfMeasure { // org.maplibre.spatialk.units/AreaUnit|null[0]
    constructor <init>(kotlin/Double, kotlin/String) // org.maplibre.spatialk.units/AreaUnit.<init>|<init>(kotlin.Double;kotlin.String){}[0]

    final val metersSquaredPerUnit // org.maplibre.spatialk.units/AreaUnit.metersSquaredPerUnit|{}metersSquaredPerUnit[0]
        final fun <get-metersSquaredPerUnit>(): kotlin/Double // org.maplibre.spatialk.units/AreaUnit.metersSquaredPerUnit.<get-metersSquaredPerUnit>|<get-metersSquaredPerUnit>(){}[0]
    open val symbol // org.maplibre.spatialk.units/AreaUnit.symbol|{}symbol[0]
        open fun <get-symbol>(): kotlin/String // org.maplibre.spatialk.units/AreaUnit.symbol.<get-symbol>|<get-symbol>(){}[0]

    final fun compareTo(org.maplibre.spatialk.units/AreaUnit): kotlin/Int // org.maplibre.spatialk.units/AreaUnit.compareTo|compareTo(org.maplibre.spatialk.units.AreaUnit){}[0]
}

open class org.maplibre.spatialk.units/LengthUnit : kotlin/Comparable<org.maplibre.spatialk.units/LengthUnit>, org.maplibre.spatialk.units/UnitOfMeasure { // org.maplibre.spatialk.units/LengthUnit|null[0]
    constructor <init>(kotlin/Double, kotlin/String, org.maplibre.spatialk.units/AreaUnit? = ...) // org.maplibre.spatialk.units/LengthUnit.<init>|<init>(kotlin.Double;kotlin.String;org.maplibre.spatialk.units.AreaUnit?){}[0]

    final val metersPerUnit // org.maplibre.spatialk.units/LengthUnit.metersPerUnit|{}metersPerUnit[0]
        final fun <get-metersPerUnit>(): kotlin/Double // org.maplibre.spatialk.units/LengthUnit.metersPerUnit.<get-metersPerUnit>|<get-metersPerUnit>(){}[0]
    open val symbol // org.maplibre.spatialk.units/LengthUnit.symbol|{}symbol[0]
        open fun <get-symbol>(): kotlin/String // org.maplibre.spatialk.units/LengthUnit.symbol.<get-symbol>|<get-symbol>(){}[0]

    final fun compareTo(org.maplibre.spatialk.units/LengthUnit): kotlin/Int // org.maplibre.spatialk.units/LengthUnit.compareTo|compareTo(org.maplibre.spatialk.units.LengthUnit){}[0]
    final fun times(org.maplibre.spatialk.units/LengthUnit): org.maplibre.spatialk.units/AreaUnit // org.maplibre.spatialk.units/LengthUnit.times|times(org.maplibre.spatialk.units.LengthUnit){}[0]
}

final object org.maplibre.spatialk.units/Geodesy { // org.maplibre.spatialk.units/Geodesy|null[0]
    final val Degrees // org.maplibre.spatialk.units/Geodesy.Degrees|{}Degrees[0]
        final fun <get-Degrees>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/Geodesy.Degrees.<get-Degrees>|<get-Degrees>(){}[0]
    final val Minutes // org.maplibre.spatialk.units/Geodesy.Minutes|{}Minutes[0]
        final fun <get-Minutes>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/Geodesy.Minutes.<get-Minutes>|<get-Minutes>(){}[0]
    final val Radians // org.maplibre.spatialk.units/Geodesy.Radians|{}Radians[0]
        final fun <get-Radians>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/Geodesy.Radians.<get-Radians>|<get-Radians>(){}[0]
    final val Seconds // org.maplibre.spatialk.units/Geodesy.Seconds|{}Seconds[0]
        final fun <get-Seconds>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/Geodesy.Seconds.<get-Seconds>|<get-Seconds>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // org.maplibre.spatialk.units/Geodesy.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // org.maplibre.spatialk.units/Geodesy.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // org.maplibre.spatialk.units/Geodesy.toString|toString(){}[0]
}

final object org.maplibre.spatialk.units/Imperial { // org.maplibre.spatialk.units/Imperial|null[0]
    final val Acres // org.maplibre.spatialk.units/Imperial.Acres|{}Acres[0]
        final fun <get-Acres>(): org.maplibre.spatialk.units/AreaUnit // org.maplibre.spatialk.units/Imperial.Acres.<get-Acres>|<get-Acres>(){}[0]
    final val Cables // org.maplibre.spatialk.units/Imperial.Cables|{}Cables[0]
        final fun <get-Cables>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/Imperial.Cables.<get-Cables>|<get-Cables>(){}[0]
    final val Chains // org.maplibre.spatialk.units/Imperial.Chains|{}Chains[0]
        final fun <get-Chains>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/Imperial.Chains.<get-Chains>|<get-Chains>(){}[0]
    final val Fathoms // org.maplibre.spatialk.units/Imperial.Fathoms|{}Fathoms[0]
        final fun <get-Fathoms>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/Imperial.Fathoms.<get-Fathoms>|<get-Fathoms>(){}[0]
    final val Feet // org.maplibre.spatialk.units/Imperial.Feet|{}Feet[0]
        final fun <get-Feet>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/Imperial.Feet.<get-Feet>|<get-Feet>(){}[0]
    final val Furlongs // org.maplibre.spatialk.units/Imperial.Furlongs|{}Furlongs[0]
        final fun <get-Furlongs>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/Imperial.Furlongs.<get-Furlongs>|<get-Furlongs>(){}[0]
    final val Inches // org.maplibre.spatialk.units/Imperial.Inches|{}Inches[0]
        final fun <get-Inches>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/Imperial.Inches.<get-Inches>|<get-Inches>(){}[0]
    final val Leagues // org.maplibre.spatialk.units/Imperial.Leagues|{}Leagues[0]
        final fun <get-Leagues>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/Imperial.Leagues.<get-Leagues>|<get-Leagues>(){}[0]
    final val Links // org.maplibre.spatialk.units/Imperial.Links|{}Links[0]
        final fun <get-Links>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/Imperial.Links.<get-Links>|<get-Links>(){}[0]
    final val Miles // org.maplibre.spatialk.units/Imperial.Miles|{}Miles[0]
        final fun <get-Miles>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/Imperial.Miles.<get-Miles>|<get-Miles>(){}[0]
    final val NauticalMiles // org.maplibre.spatialk.units/Imperial.NauticalMiles|{}NauticalMiles[0]
        final fun <get-NauticalMiles>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/Imperial.NauticalMiles.<get-NauticalMiles>|<get-NauticalMiles>(){}[0]
    final val Rods // org.maplibre.spatialk.units/Imperial.Rods|{}Rods[0]
        final fun <get-Rods>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/Imperial.Rods.<get-Rods>|<get-Rods>(){}[0]
    final val SquareFeet // org.maplibre.spatialk.units/Imperial.SquareFeet|{}SquareFeet[0]
        final fun <get-SquareFeet>(): org.maplibre.spatialk.units/AreaUnit // org.maplibre.spatialk.units/Imperial.SquareFeet.<get-SquareFeet>|<get-SquareFeet>(){}[0]
    final val SquareInches // org.maplibre.spatialk.units/Imperial.SquareInches|{}SquareInches[0]
        final fun <get-SquareInches>(): org.maplibre.spatialk.units/AreaUnit // org.maplibre.spatialk.units/Imperial.SquareInches.<get-SquareInches>|<get-SquareInches>(){}[0]
    final val SquareMiles // org.maplibre.spatialk.units/Imperial.SquareMiles|{}SquareMiles[0]
        final fun <get-SquareMiles>(): org.maplibre.spatialk.units/AreaUnit // org.maplibre.spatialk.units/Imperial.SquareMiles.<get-SquareMiles>|<get-SquareMiles>(){}[0]
    final val SquareRods // org.maplibre.spatialk.units/Imperial.SquareRods|{}SquareRods[0]
        final fun <get-SquareRods>(): org.maplibre.spatialk.units/AreaUnit // org.maplibre.spatialk.units/Imperial.SquareRods.<get-SquareRods>|<get-SquareRods>(){}[0]
    final val SquareYards // org.maplibre.spatialk.units/Imperial.SquareYards|{}SquareYards[0]
        final fun <get-SquareYards>(): org.maplibre.spatialk.units/AreaUnit // org.maplibre.spatialk.units/Imperial.SquareYards.<get-SquareYards>|<get-SquareYards>(){}[0]
    final val Yards // org.maplibre.spatialk.units/Imperial.Yards|{}Yards[0]
        final fun <get-Yards>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/Imperial.Yards.<get-Yards>|<get-Yards>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // org.maplibre.spatialk.units/Imperial.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // org.maplibre.spatialk.units/Imperial.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // org.maplibre.spatialk.units/Imperial.toString|toString(){}[0]
}

final object org.maplibre.spatialk.units/International { // org.maplibre.spatialk.units/International|null[0]
    final val Centimeters // org.maplibre.spatialk.units/International.Centimeters|{}Centimeters[0]
        final fun <get-Centimeters>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/International.Centimeters.<get-Centimeters>|<get-Centimeters>(){}[0]
    final val Kilometers // org.maplibre.spatialk.units/International.Kilometers|{}Kilometers[0]
        final fun <get-Kilometers>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/International.Kilometers.<get-Kilometers>|<get-Kilometers>(){}[0]
    final val Meters // org.maplibre.spatialk.units/International.Meters|{}Meters[0]
        final fun <get-Meters>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/International.Meters.<get-Meters>|<get-Meters>(){}[0]
    final val Millimeters // org.maplibre.spatialk.units/International.Millimeters|{}Millimeters[0]
        final fun <get-Millimeters>(): org.maplibre.spatialk.units/LengthUnit // org.maplibre.spatialk.units/International.Millimeters.<get-Millimeters>|<get-Millimeters>(){}[0]
    final val SquareCentimeters // org.maplibre.spatialk.units/International.SquareCentimeters|{}SquareCentimeters[0]
        final fun <get-SquareCentimeters>(): org.maplibre.spatialk.units/AreaUnit // org.maplibre.spatialk.units/International.SquareCentimeters.<get-SquareCentimeters>|<get-SquareCentimeters>(){}[0]
    final val SquareKilometers // org.maplibre.spatialk.units/International.SquareKilometers|{}SquareKilometers[0]
        final fun <get-SquareKilometers>(): org.maplibre.spatialk.units/AreaUnit // org.maplibre.spatialk.units/International.SquareKilometers.<get-SquareKilometers>|<get-SquareKilometers>(){}[0]
    final val SquareMeters // org.maplibre.spatialk.units/International.SquareMeters|{}SquareMeters[0]
        final fun <get-SquareMeters>(): org.maplibre.spatialk.units/AreaUnit // org.maplibre.spatialk.units/International.SquareMeters.<get-SquareMeters>|<get-SquareMeters>(){}[0]
    final val SquareMillimeters // org.maplibre.spatialk.units/International.SquareMillimeters|{}SquareMillimeters[0]
        final fun <get-SquareMillimeters>(): org.maplibre.spatialk.units/AreaUnit // org.maplibre.spatialk.units/International.SquareMillimeters.<get-SquareMillimeters>|<get-SquareMillimeters>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // org.maplibre.spatialk.units/International.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // org.maplibre.spatialk.units/International.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // org.maplibre.spatialk.units/International.toString|toString(){}[0]
}

final object org.maplibre.spatialk.units/Metric { // org.maplibre.spatialk.units/Metric|null[0]
    final val Ares // org.maplibre.spatialk.units/Metric.Ares|{}Ares[0]
        final fun <get-Ares>(): org.maplibre.spatialk.units/AreaUnit // org.maplibre.spatialk.units/Metric.Ares.<get-Ares>|<get-Ares>(){}[0]
    final val Centiares // org.maplibre.spatialk.units/Metric.Centiares|{}Centiares[0]
        final fun <get-Centiares>(): org.maplibre.spatialk.units/AreaUnit // org.maplibre.spatialk.units/Metric.Centiares.<get-Centiares>|<get-Centiares>(){}[0]
    final val Decares // org.maplibre.spatialk.units/Metric.Decares|{}Decares[0]
        final fun <get-Decares>(): org.maplibre.spatialk.units/AreaUnit // org.maplibre.spatialk.units/Metric.Decares.<get-Decares>|<get-Decares>(){}[0]
    final val Deciares // org.maplibre.spatialk.units/Metric.Deciares|{}Deciares[0]
        final fun <get-Deciares>(): org.maplibre.spatialk.units/AreaUnit // org.maplibre.spatialk.units/Metric.Deciares.<get-Deciares>|<get-Deciares>(){}[0]
    final val Hectares // org.maplibre.spatialk.units/Metric.Hectares|{}Hectares[0]
        final fun <get-Hectares>(): org.maplibre.spatialk.units/AreaUnit // org.maplibre.spatialk.units/Metric.Hectares.<get-Hectares>|<get-Hectares>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // org.maplibre.spatialk.units/Metric.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // org.maplibre.spatialk.units/Metric.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // org.maplibre.spatialk.units/Metric.toString|toString(){}[0]
}

final val org.maplibre.spatialk.units.extensions/acres // org.maplibre.spatialk.units.extensions/acres|@kotlin.Double{}acres[0]
    final inline fun (kotlin/Double).<get-acres>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/acres.<get-acres>|<get-acres>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/acres // org.maplibre.spatialk.units.extensions/acres|@kotlin.Int{}acres[0]
    final inline fun (kotlin/Int).<get-acres>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/acres.<get-acres>|<get-acres>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/ares // org.maplibre.spatialk.units.extensions/ares|@kotlin.Double{}ares[0]
    final inline fun (kotlin/Double).<get-ares>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/ares.<get-ares>|<get-ares>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/ares // org.maplibre.spatialk.units.extensions/ares|@kotlin.Int{}ares[0]
    final inline fun (kotlin/Int).<get-ares>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/ares.<get-ares>|<get-ares>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/cables // org.maplibre.spatialk.units.extensions/cables|@kotlin.Double{}cables[0]
    final inline fun (kotlin/Double).<get-cables>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/cables.<get-cables>|<get-cables>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/cables // org.maplibre.spatialk.units.extensions/cables|@kotlin.Int{}cables[0]
    final inline fun (kotlin/Int).<get-cables>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/cables.<get-cables>|<get-cables>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/centiares // org.maplibre.spatialk.units.extensions/centiares|@kotlin.Double{}centiares[0]
    final inline fun (kotlin/Double).<get-centiares>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/centiares.<get-centiares>|<get-centiares>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/centiares // org.maplibre.spatialk.units.extensions/centiares|@kotlin.Int{}centiares[0]
    final inline fun (kotlin/Int).<get-centiares>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/centiares.<get-centiares>|<get-centiares>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/centimeters // org.maplibre.spatialk.units.extensions/centimeters|@kotlin.Double{}centimeters[0]
    final inline fun (kotlin/Double).<get-centimeters>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/centimeters.<get-centimeters>|<get-centimeters>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/centimeters // org.maplibre.spatialk.units.extensions/centimeters|@kotlin.Int{}centimeters[0]
    final inline fun (kotlin/Int).<get-centimeters>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/centimeters.<get-centimeters>|<get-centimeters>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/chains // org.maplibre.spatialk.units.extensions/chains|@kotlin.Double{}chains[0]
    final inline fun (kotlin/Double).<get-chains>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/chains.<get-chains>|<get-chains>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/chains // org.maplibre.spatialk.units.extensions/chains|@kotlin.Int{}chains[0]
    final inline fun (kotlin/Int).<get-chains>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/chains.<get-chains>|<get-chains>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/decares // org.maplibre.spatialk.units.extensions/decares|@kotlin.Double{}decares[0]
    final inline fun (kotlin/Double).<get-decares>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/decares.<get-decares>|<get-decares>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/decares // org.maplibre.spatialk.units.extensions/decares|@kotlin.Int{}decares[0]
    final inline fun (kotlin/Int).<get-decares>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/decares.<get-decares>|<get-decares>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/deciares // org.maplibre.spatialk.units.extensions/deciares|@kotlin.Double{}deciares[0]
    final inline fun (kotlin/Double).<get-deciares>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/deciares.<get-deciares>|<get-deciares>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/deciares // org.maplibre.spatialk.units.extensions/deciares|@kotlin.Int{}deciares[0]
    final inline fun (kotlin/Int).<get-deciares>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/deciares.<get-deciares>|<get-deciares>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/earthDegrees // org.maplibre.spatialk.units.extensions/earthDegrees|@kotlin.Double{}earthDegrees[0]
    final inline fun (kotlin/Double).<get-earthDegrees>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/earthDegrees.<get-earthDegrees>|<get-earthDegrees>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/earthDegrees // org.maplibre.spatialk.units.extensions/earthDegrees|@kotlin.Int{}earthDegrees[0]
    final inline fun (kotlin/Int).<get-earthDegrees>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/earthDegrees.<get-earthDegrees>|<get-earthDegrees>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/earthMinutes // org.maplibre.spatialk.units.extensions/earthMinutes|@kotlin.Double{}earthMinutes[0]
    final inline fun (kotlin/Double).<get-earthMinutes>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/earthMinutes.<get-earthMinutes>|<get-earthMinutes>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/earthMinutes // org.maplibre.spatialk.units.extensions/earthMinutes|@kotlin.Int{}earthMinutes[0]
    final inline fun (kotlin/Int).<get-earthMinutes>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/earthMinutes.<get-earthMinutes>|<get-earthMinutes>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/earthRadians // org.maplibre.spatialk.units.extensions/earthRadians|@kotlin.Double{}earthRadians[0]
    final inline fun (kotlin/Double).<get-earthRadians>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/earthRadians.<get-earthRadians>|<get-earthRadians>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/earthRadians // org.maplibre.spatialk.units.extensions/earthRadians|@kotlin.Int{}earthRadians[0]
    final inline fun (kotlin/Int).<get-earthRadians>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/earthRadians.<get-earthRadians>|<get-earthRadians>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/earthSeconds // org.maplibre.spatialk.units.extensions/earthSeconds|@kotlin.Double{}earthSeconds[0]
    final inline fun (kotlin/Double).<get-earthSeconds>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/earthSeconds.<get-earthSeconds>|<get-earthSeconds>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/earthSeconds // org.maplibre.spatialk.units.extensions/earthSeconds|@kotlin.Int{}earthSeconds[0]
    final inline fun (kotlin/Int).<get-earthSeconds>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/earthSeconds.<get-earthSeconds>|<get-earthSeconds>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/fathoms // org.maplibre.spatialk.units.extensions/fathoms|@kotlin.Double{}fathoms[0]
    final inline fun (kotlin/Double).<get-fathoms>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/fathoms.<get-fathoms>|<get-fathoms>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/fathoms // org.maplibre.spatialk.units.extensions/fathoms|@kotlin.Int{}fathoms[0]
    final inline fun (kotlin/Int).<get-fathoms>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/fathoms.<get-fathoms>|<get-fathoms>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/feet // org.maplibre.spatialk.units.extensions/feet|@kotlin.Double{}feet[0]
    final inline fun (kotlin/Double).<get-feet>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/feet.<get-feet>|<get-feet>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/feet // org.maplibre.spatialk.units.extensions/feet|@kotlin.Int{}feet[0]
    final inline fun (kotlin/Int).<get-feet>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/feet.<get-feet>|<get-feet>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/furlongs // org.maplibre.spatialk.units.extensions/furlongs|@kotlin.Double{}furlongs[0]
    final inline fun (kotlin/Double).<get-furlongs>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/furlongs.<get-furlongs>|<get-furlongs>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/furlongs // org.maplibre.spatialk.units.extensions/furlongs|@kotlin.Int{}furlongs[0]
    final inline fun (kotlin/Int).<get-furlongs>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/furlongs.<get-furlongs>|<get-furlongs>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/hectares // org.maplibre.spatialk.units.extensions/hectares|@kotlin.Double{}hectares[0]
    final inline fun (kotlin/Double).<get-hectares>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/hectares.<get-hectares>|<get-hectares>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/hectares // org.maplibre.spatialk.units.extensions/hectares|@kotlin.Int{}hectares[0]
    final inline fun (kotlin/Int).<get-hectares>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/hectares.<get-hectares>|<get-hectares>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/inAcres // org.maplibre.spatialk.units.extensions/inAcres|@org.maplibre.spatialk.units.Area{}inAcres[0]
    final inline fun (org.maplibre.spatialk.units/Area).<get-inAcres>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inAcres.<get-inAcres>|<get-inAcres>@org.maplibre.spatialk.units.Area(){}[0]
final val org.maplibre.spatialk.units.extensions/inAres // org.maplibre.spatialk.units.extensions/inAres|@org.maplibre.spatialk.units.Area{}inAres[0]
    final inline fun (org.maplibre.spatialk.units/Area).<get-inAres>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inAres.<get-inAres>|<get-inAres>@org.maplibre.spatialk.units.Area(){}[0]
final val org.maplibre.spatialk.units.extensions/inCables // org.maplibre.spatialk.units.extensions/inCables|@org.maplibre.spatialk.units.Length{}inCables[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inCables>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inCables.<get-inCables>|<get-inCables>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inCentiares // org.maplibre.spatialk.units.extensions/inCentiares|@org.maplibre.spatialk.units.Area{}inCentiares[0]
    final inline fun (org.maplibre.spatialk.units/Area).<get-inCentiares>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inCentiares.<get-inCentiares>|<get-inCentiares>@org.maplibre.spatialk.units.Area(){}[0]
final val org.maplibre.spatialk.units.extensions/inCentimeters // org.maplibre.spatialk.units.extensions/inCentimeters|@org.maplibre.spatialk.units.Length{}inCentimeters[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inCentimeters>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inCentimeters.<get-inCentimeters>|<get-inCentimeters>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inChains // org.maplibre.spatialk.units.extensions/inChains|@org.maplibre.spatialk.units.Length{}inChains[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inChains>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inChains.<get-inChains>|<get-inChains>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inDecares // org.maplibre.spatialk.units.extensions/inDecares|@org.maplibre.spatialk.units.Area{}inDecares[0]
    final inline fun (org.maplibre.spatialk.units/Area).<get-inDecares>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inDecares.<get-inDecares>|<get-inDecares>@org.maplibre.spatialk.units.Area(){}[0]
final val org.maplibre.spatialk.units.extensions/inDeciares // org.maplibre.spatialk.units.extensions/inDeciares|@org.maplibre.spatialk.units.Area{}inDeciares[0]
    final inline fun (org.maplibre.spatialk.units/Area).<get-inDeciares>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inDeciares.<get-inDeciares>|<get-inDeciares>@org.maplibre.spatialk.units.Area(){}[0]
final val org.maplibre.spatialk.units.extensions/inEarthDegrees // org.maplibre.spatialk.units.extensions/inEarthDegrees|@org.maplibre.spatialk.units.Length{}inEarthDegrees[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inEarthDegrees>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inEarthDegrees.<get-inEarthDegrees>|<get-inEarthDegrees>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inEarthMinutes // org.maplibre.spatialk.units.extensions/inEarthMinutes|@org.maplibre.spatialk.units.Length{}inEarthMinutes[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inEarthMinutes>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inEarthMinutes.<get-inEarthMinutes>|<get-inEarthMinutes>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inEarthRadians // org.maplibre.spatialk.units.extensions/inEarthRadians|@org.maplibre.spatialk.units.Length{}inEarthRadians[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inEarthRadians>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inEarthRadians.<get-inEarthRadians>|<get-inEarthRadians>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inEarthSeconds // org.maplibre.spatialk.units.extensions/inEarthSeconds|@org.maplibre.spatialk.units.Length{}inEarthSeconds[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inEarthSeconds>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inEarthSeconds.<get-inEarthSeconds>|<get-inEarthSeconds>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inFathoms // org.maplibre.spatialk.units.extensions/inFathoms|@org.maplibre.spatialk.units.Length{}inFathoms[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inFathoms>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inFathoms.<get-inFathoms>|<get-inFathoms>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inFeet // org.maplibre.spatialk.units.extensions/inFeet|@org.maplibre.spatialk.units.Length{}inFeet[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inFeet>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inFeet.<get-inFeet>|<get-inFeet>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inFurlongs // org.maplibre.spatialk.units.extensions/inFurlongs|@org.maplibre.spatialk.units.Length{}inFurlongs[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inFurlongs>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inFurlongs.<get-inFurlongs>|<get-inFurlongs>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inHectares // org.maplibre.spatialk.units.extensions/inHectares|@org.maplibre.spatialk.units.Area{}inHectares[0]
    final inline fun (org.maplibre.spatialk.units/Area).<get-inHectares>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inHectares.<get-inHectares>|<get-inHectares>@org.maplibre.spatialk.units.Area(){}[0]
final val org.maplibre.spatialk.units.extensions/inInches // org.maplibre.spatialk.units.extensions/inInches|@org.maplibre.spatialk.units.Length{}inInches[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inInches>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inInches.<get-inInches>|<get-inInches>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inKilometers // org.maplibre.spatialk.units.extensions/inKilometers|@org.maplibre.spatialk.units.Length{}inKilometers[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inKilometers>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inKilometers.<get-inKilometers>|<get-inKilometers>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inLeagues // org.maplibre.spatialk.units.extensions/inLeagues|@org.maplibre.spatialk.units.Length{}inLeagues[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inLeagues>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inLeagues.<get-inLeagues>|<get-inLeagues>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inLinks // org.maplibre.spatialk.units.extensions/inLinks|@org.maplibre.spatialk.units.Length{}inLinks[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inLinks>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inLinks.<get-inLinks>|<get-inLinks>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inMeters // org.maplibre.spatialk.units.extensions/inMeters|@org.maplibre.spatialk.units.Length{}inMeters[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inMeters>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inMeters.<get-inMeters>|<get-inMeters>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inMiles // org.maplibre.spatialk.units.extensions/inMiles|@org.maplibre.spatialk.units.Length{}inMiles[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inMiles>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inMiles.<get-inMiles>|<get-inMiles>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inMillimeters // org.maplibre.spatialk.units.extensions/inMillimeters|@org.maplibre.spatialk.units.Length{}inMillimeters[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inMillimeters>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inMillimeters.<get-inMillimeters>|<get-inMillimeters>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inNauticalMiles // org.maplibre.spatialk.units.extensions/inNauticalMiles|@org.maplibre.spatialk.units.Length{}inNauticalMiles[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inNauticalMiles>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inNauticalMiles.<get-inNauticalMiles>|<get-inNauticalMiles>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inRods // org.maplibre.spatialk.units.extensions/inRods|@org.maplibre.spatialk.units.Length{}inRods[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inRods>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inRods.<get-inRods>|<get-inRods>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inSquareCentimeters // org.maplibre.spatialk.units.extensions/inSquareCentimeters|@org.maplibre.spatialk.units.Area{}inSquareCentimeters[0]
    final inline fun (org.maplibre.spatialk.units/Area).<get-inSquareCentimeters>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inSquareCentimeters.<get-inSquareCentimeters>|<get-inSquareCentimeters>@org.maplibre.spatialk.units.Area(){}[0]
final val org.maplibre.spatialk.units.extensions/inSquareFeet // org.maplibre.spatialk.units.extensions/inSquareFeet|@org.maplibre.spatialk.units.Area{}inSquareFeet[0]
    final inline fun (org.maplibre.spatialk.units/Area).<get-inSquareFeet>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inSquareFeet.<get-inSquareFeet>|<get-inSquareFeet>@org.maplibre.spatialk.units.Area(){}[0]
final val org.maplibre.spatialk.units.extensions/inSquareInches // org.maplibre.spatialk.units.extensions/inSquareInches|@org.maplibre.spatialk.units.Area{}inSquareInches[0]
    final inline fun (org.maplibre.spatialk.units/Area).<get-inSquareInches>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inSquareInches.<get-inSquareInches>|<get-inSquareInches>@org.maplibre.spatialk.units.Area(){}[0]
final val org.maplibre.spatialk.units.extensions/inSquareKilometers // org.maplibre.spatialk.units.extensions/inSquareKilometers|@org.maplibre.spatialk.units.Area{}inSquareKilometers[0]
    final inline fun (org.maplibre.spatialk.units/Area).<get-inSquareKilometers>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inSquareKilometers.<get-inSquareKilometers>|<get-inSquareKilometers>@org.maplibre.spatialk.units.Area(){}[0]
final val org.maplibre.spatialk.units.extensions/inSquareMeters // org.maplibre.spatialk.units.extensions/inSquareMeters|@org.maplibre.spatialk.units.Area{}inSquareMeters[0]
    final inline fun (org.maplibre.spatialk.units/Area).<get-inSquareMeters>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inSquareMeters.<get-inSquareMeters>|<get-inSquareMeters>@org.maplibre.spatialk.units.Area(){}[0]
final val org.maplibre.spatialk.units.extensions/inSquareMiles // org.maplibre.spatialk.units.extensions/inSquareMiles|@org.maplibre.spatialk.units.Area{}inSquareMiles[0]
    final inline fun (org.maplibre.spatialk.units/Area).<get-inSquareMiles>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inSquareMiles.<get-inSquareMiles>|<get-inSquareMiles>@org.maplibre.spatialk.units.Area(){}[0]
final val org.maplibre.spatialk.units.extensions/inSquareMillimeters // org.maplibre.spatialk.units.extensions/inSquareMillimeters|@org.maplibre.spatialk.units.Area{}inSquareMillimeters[0]
    final inline fun (org.maplibre.spatialk.units/Area).<get-inSquareMillimeters>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inSquareMillimeters.<get-inSquareMillimeters>|<get-inSquareMillimeters>@org.maplibre.spatialk.units.Area(){}[0]
final val org.maplibre.spatialk.units.extensions/inSquareRods // org.maplibre.spatialk.units.extensions/inSquareRods|@org.maplibre.spatialk.units.Area{}inSquareRods[0]
    final inline fun (org.maplibre.spatialk.units/Area).<get-inSquareRods>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inSquareRods.<get-inSquareRods>|<get-inSquareRods>@org.maplibre.spatialk.units.Area(){}[0]
final val org.maplibre.spatialk.units.extensions/inSquareYards // org.maplibre.spatialk.units.extensions/inSquareYards|@org.maplibre.spatialk.units.Area{}inSquareYards[0]
    final inline fun (org.maplibre.spatialk.units/Area).<get-inSquareYards>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inSquareYards.<get-inSquareYards>|<get-inSquareYards>@org.maplibre.spatialk.units.Area(){}[0]
final val org.maplibre.spatialk.units.extensions/inYards // org.maplibre.spatialk.units.extensions/inYards|@org.maplibre.spatialk.units.Length{}inYards[0]
    final inline fun (org.maplibre.spatialk.units/Length).<get-inYards>(): kotlin/Double // org.maplibre.spatialk.units.extensions/inYards.<get-inYards>|<get-inYards>@org.maplibre.spatialk.units.Length(){}[0]
final val org.maplibre.spatialk.units.extensions/inches // org.maplibre.spatialk.units.extensions/inches|@kotlin.Double{}inches[0]
    final inline fun (kotlin/Double).<get-inches>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/inches.<get-inches>|<get-inches>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/inches // org.maplibre.spatialk.units.extensions/inches|@kotlin.Int{}inches[0]
    final inline fun (kotlin/Int).<get-inches>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/inches.<get-inches>|<get-inches>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/kilometers // org.maplibre.spatialk.units.extensions/kilometers|@kotlin.Double{}kilometers[0]
    final inline fun (kotlin/Double).<get-kilometers>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/kilometers.<get-kilometers>|<get-kilometers>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/kilometers // org.maplibre.spatialk.units.extensions/kilometers|@kotlin.Int{}kilometers[0]
    final inline fun (kotlin/Int).<get-kilometers>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/kilometers.<get-kilometers>|<get-kilometers>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/leagues // org.maplibre.spatialk.units.extensions/leagues|@kotlin.Double{}leagues[0]
    final inline fun (kotlin/Double).<get-leagues>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/leagues.<get-leagues>|<get-leagues>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/leagues // org.maplibre.spatialk.units.extensions/leagues|@kotlin.Int{}leagues[0]
    final inline fun (kotlin/Int).<get-leagues>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/leagues.<get-leagues>|<get-leagues>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/links // org.maplibre.spatialk.units.extensions/links|@kotlin.Double{}links[0]
    final inline fun (kotlin/Double).<get-links>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/links.<get-links>|<get-links>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/links // org.maplibre.spatialk.units.extensions/links|@kotlin.Int{}links[0]
    final inline fun (kotlin/Int).<get-links>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/links.<get-links>|<get-links>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/meters // org.maplibre.spatialk.units.extensions/meters|@kotlin.Double{}meters[0]
    final inline fun (kotlin/Double).<get-meters>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/meters.<get-meters>|<get-meters>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/meters // org.maplibre.spatialk.units.extensions/meters|@kotlin.Int{}meters[0]
    final inline fun (kotlin/Int).<get-meters>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/meters.<get-meters>|<get-meters>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/miles // org.maplibre.spatialk.units.extensions/miles|@kotlin.Double{}miles[0]
    final inline fun (kotlin/Double).<get-miles>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/miles.<get-miles>|<get-miles>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/miles // org.maplibre.spatialk.units.extensions/miles|@kotlin.Int{}miles[0]
    final inline fun (kotlin/Int).<get-miles>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/miles.<get-miles>|<get-miles>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/millimeters // org.maplibre.spatialk.units.extensions/millimeters|@kotlin.Double{}millimeters[0]
    final inline fun (kotlin/Double).<get-millimeters>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/millimeters.<get-millimeters>|<get-millimeters>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/millimeters // org.maplibre.spatialk.units.extensions/millimeters|@kotlin.Int{}millimeters[0]
    final inline fun (kotlin/Int).<get-millimeters>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/millimeters.<get-millimeters>|<get-millimeters>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/nauticalMiles // org.maplibre.spatialk.units.extensions/nauticalMiles|@kotlin.Double{}nauticalMiles[0]
    final inline fun (kotlin/Double).<get-nauticalMiles>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/nauticalMiles.<get-nauticalMiles>|<get-nauticalMiles>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/nauticalMiles // org.maplibre.spatialk.units.extensions/nauticalMiles|@kotlin.Int{}nauticalMiles[0]
    final inline fun (kotlin/Int).<get-nauticalMiles>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/nauticalMiles.<get-nauticalMiles>|<get-nauticalMiles>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/rods // org.maplibre.spatialk.units.extensions/rods|@kotlin.Double{}rods[0]
    final inline fun (kotlin/Double).<get-rods>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/rods.<get-rods>|<get-rods>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/rods // org.maplibre.spatialk.units.extensions/rods|@kotlin.Int{}rods[0]
    final inline fun (kotlin/Int).<get-rods>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/rods.<get-rods>|<get-rods>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/squareCentimeters // org.maplibre.spatialk.units.extensions/squareCentimeters|@kotlin.Double{}squareCentimeters[0]
    final inline fun (kotlin/Double).<get-squareCentimeters>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareCentimeters.<get-squareCentimeters>|<get-squareCentimeters>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/squareCentimeters // org.maplibre.spatialk.units.extensions/squareCentimeters|@kotlin.Int{}squareCentimeters[0]
    final inline fun (kotlin/Int).<get-squareCentimeters>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareCentimeters.<get-squareCentimeters>|<get-squareCentimeters>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/squareFeet // org.maplibre.spatialk.units.extensions/squareFeet|@kotlin.Double{}squareFeet[0]
    final inline fun (kotlin/Double).<get-squareFeet>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareFeet.<get-squareFeet>|<get-squareFeet>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/squareFeet // org.maplibre.spatialk.units.extensions/squareFeet|@kotlin.Int{}squareFeet[0]
    final inline fun (kotlin/Int).<get-squareFeet>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareFeet.<get-squareFeet>|<get-squareFeet>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/squareInches // org.maplibre.spatialk.units.extensions/squareInches|@kotlin.Double{}squareInches[0]
    final inline fun (kotlin/Double).<get-squareInches>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareInches.<get-squareInches>|<get-squareInches>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/squareInches // org.maplibre.spatialk.units.extensions/squareInches|@kotlin.Int{}squareInches[0]
    final inline fun (kotlin/Int).<get-squareInches>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareInches.<get-squareInches>|<get-squareInches>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/squareKilometers // org.maplibre.spatialk.units.extensions/squareKilometers|@kotlin.Double{}squareKilometers[0]
    final inline fun (kotlin/Double).<get-squareKilometers>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareKilometers.<get-squareKilometers>|<get-squareKilometers>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/squareKilometers // org.maplibre.spatialk.units.extensions/squareKilometers|@kotlin.Int{}squareKilometers[0]
    final inline fun (kotlin/Int).<get-squareKilometers>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareKilometers.<get-squareKilometers>|<get-squareKilometers>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/squareMeters // org.maplibre.spatialk.units.extensions/squareMeters|@kotlin.Double{}squareMeters[0]
    final inline fun (kotlin/Double).<get-squareMeters>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareMeters.<get-squareMeters>|<get-squareMeters>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/squareMeters // org.maplibre.spatialk.units.extensions/squareMeters|@kotlin.Int{}squareMeters[0]
    final inline fun (kotlin/Int).<get-squareMeters>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareMeters.<get-squareMeters>|<get-squareMeters>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/squareMiles // org.maplibre.spatialk.units.extensions/squareMiles|@kotlin.Double{}squareMiles[0]
    final inline fun (kotlin/Double).<get-squareMiles>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareMiles.<get-squareMiles>|<get-squareMiles>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/squareMiles // org.maplibre.spatialk.units.extensions/squareMiles|@kotlin.Int{}squareMiles[0]
    final inline fun (kotlin/Int).<get-squareMiles>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareMiles.<get-squareMiles>|<get-squareMiles>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/squareMillimeters // org.maplibre.spatialk.units.extensions/squareMillimeters|@kotlin.Double{}squareMillimeters[0]
    final inline fun (kotlin/Double).<get-squareMillimeters>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareMillimeters.<get-squareMillimeters>|<get-squareMillimeters>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/squareMillimeters // org.maplibre.spatialk.units.extensions/squareMillimeters|@kotlin.Int{}squareMillimeters[0]
    final inline fun (kotlin/Int).<get-squareMillimeters>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareMillimeters.<get-squareMillimeters>|<get-squareMillimeters>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/squareRods // org.maplibre.spatialk.units.extensions/squareRods|@kotlin.Double{}squareRods[0]
    final inline fun (kotlin/Double).<get-squareRods>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareRods.<get-squareRods>|<get-squareRods>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/squareRods // org.maplibre.spatialk.units.extensions/squareRods|@kotlin.Int{}squareRods[0]
    final inline fun (kotlin/Int).<get-squareRods>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareRods.<get-squareRods>|<get-squareRods>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/squareYards // org.maplibre.spatialk.units.extensions/squareYards|@kotlin.Double{}squareYards[0]
    final inline fun (kotlin/Double).<get-squareYards>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareYards.<get-squareYards>|<get-squareYards>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/squareYards // org.maplibre.spatialk.units.extensions/squareYards|@kotlin.Int{}squareYards[0]
    final inline fun (kotlin/Int).<get-squareYards>(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/squareYards.<get-squareYards>|<get-squareYards>@kotlin.Int(){}[0]
final val org.maplibre.spatialk.units.extensions/yards // org.maplibre.spatialk.units.extensions/yards|@kotlin.Double{}yards[0]
    final inline fun (kotlin/Double).<get-yards>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/yards.<get-yards>|<get-yards>@kotlin.Double(){}[0]
final val org.maplibre.spatialk.units.extensions/yards // org.maplibre.spatialk.units.extensions/yards|@kotlin.Int{}yards[0]
    final inline fun (kotlin/Int).<get-yards>(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/yards.<get-yards>|<get-yards>@kotlin.Int(){}[0]

final fun (kotlin.collections/Iterable<org.maplibre.spatialk.units/Area>).org.maplibre.spatialk.units.extensions/sum(): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/sum|sum@kotlin.collections.Iterable<org.maplibre.spatialk.units.Area>(){}[0]
final fun (kotlin.collections/Iterable<org.maplibre.spatialk.units/Length>).org.maplibre.spatialk.units.extensions/sum(): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/sum|sum@kotlin.collections.Iterable<org.maplibre.spatialk.units.Length>(){}[0]
final fun (kotlin/Double).org.maplibre.spatialk.units.extensions/convert(org.maplibre.spatialk.units/AreaUnit, org.maplibre.spatialk.units/AreaUnit): kotlin/Double // org.maplibre.spatialk.units.extensions/convert|convert@kotlin.Double(org.maplibre.spatialk.units.AreaUnit;org.maplibre.spatialk.units.AreaUnit){}[0]
final fun (kotlin/Double).org.maplibre.spatialk.units.extensions/convert(org.maplibre.spatialk.units/LengthUnit, org.maplibre.spatialk.units/LengthUnit): kotlin/Double // org.maplibre.spatialk.units.extensions/convert|convert@kotlin.Double(org.maplibre.spatialk.units.LengthUnit;org.maplibre.spatialk.units.LengthUnit){}[0]
final fun (kotlin/Double).org.maplibre.spatialk.units.extensions/times(org.maplibre.spatialk.units/Area): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/times|times@kotlin.Double(org.maplibre.spatialk.units.Area){}[0]
final fun (kotlin/Double).org.maplibre.spatialk.units.extensions/times(org.maplibre.spatialk.units/Length): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/times|times@kotlin.Double(org.maplibre.spatialk.units.Length){}[0]
final fun (kotlin/Double).org.maplibre.spatialk.units.extensions/toArea(org.maplibre.spatialk.units/AreaUnit): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/toArea|toArea@kotlin.Double(org.maplibre.spatialk.units.AreaUnit){}[0]
final fun (kotlin/Double).org.maplibre.spatialk.units.extensions/toLength(org.maplibre.spatialk.units/LengthUnit): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/toLength|toLength@kotlin.Double(org.maplibre.spatialk.units.LengthUnit){}[0]
final inline fun <#A: kotlin/Any?> (kotlin.collections/Iterable<#A>).org.maplibre.spatialk.units.extensions/sumOf(kotlin/Function1<#A, org.maplibre.spatialk.units/Area>): org.maplibre.spatialk.units/Area // org.maplibre.spatialk.units.extensions/sumOf|sumOf@kotlin.collections.Iterable<0:0>(kotlin.Function1<0:0,org.maplibre.spatialk.units.Area>){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> (kotlin.collections/Iterable<#A>).org.maplibre.spatialk.units.extensions/sumOf(kotlin/Function1<#A, org.maplibre.spatialk.units/Length>): org.maplibre.spatialk.units/Length // org.maplibre.spatialk.units.extensions/sumOf|sumOf@kotlin.collections.Iterable<0:0>(kotlin.Function1<0:0,org.maplibre.spatialk.units.Length>){0§<kotlin.Any?>}[0]
